package gui.activities;

import utils.drawing.Panel;
import utils.graphing.Graphable;
import utils.graphing.GraphableObject;
import utils.graphing.Point;
import utils.preferences.MessageBox;
import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.Gravity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.TabHost;
import android.widget.TabHost.TabSpec;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;

public class GraphingActivity extends Activity 
{
	public final static String GRAPHING_ACTIVITY = "gui.activities.PREFERENCE_MESSAGE";
	public final static String NAME_ACTIVITY_GRAPHING = "graphing_activity";
    private static int id = 1;
	//private VideoActivity videoActivity;
    
    public double parseValue(String text)
    {
    	try
    	{
    		return Double.parseDouble(text);
    	}
    	catch(Exception e)
    	{
    		e.printStackTrace();
    		MessageBox box = new MessageBox("Invalid Scale Distance (only use numbers and decimals). Using default value of 100cm.");
    		box.show(getFragmentManager(), "err_msgbx_parse");
    		return 100.0D;
    	}
    }
    
    public void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        
        try
        {
        	TextView text = (TextView)(findViewById(R.id.scale_text_zone));
        	double value = parseValue(text.getText().toString());
        	
	        if(VideoActivity.mainProject.getOptions().getDataChanged())
	        {
	        	VideoActivity.mainProject.getOptions().setDataUnchanged();
	        	VideoActivity.mainProject.updateGraphable(this, value);
	        }
	        
	        //If the graph data has changed at all, update the graphableobjectcontainer that is in use
	        VideoActivity.mainProject.updateGraphable(this, value);
        }
        catch(Exception e)
        {
        	e.printStackTrace();
        }
        
        //setContentView(new Panel(this));
        setContentView(R.layout.activity_graphing);
        
        TabHost tabHost= (TabHost) findViewById(R.id.tabHost);
        tabHost.setup();

        try
        {
	        Panel panel_tab_1 = (Panel)findViewById(R.id.panel_position_time);
	        panel_tab_1.setGraphableObjectContainer(VideoActivity.mainProject.getGraphable());
	        panel_tab_1.setGraphType(Graphable.GRAPH_TYPE_POSITION_TIME);
	        panel_tab_1.invalidate();
        }
        catch(Exception e)
        {
        	e.printStackTrace();
        }
        
        try
        {
	        Panel panel_tab_2 = (Panel)findViewById(R.id.panel_velocity_time);
	        panel_tab_2.setGraphableObjectContainer(VideoActivity.mainProject.getGraphable());
	        panel_tab_2.setGraphType(Graphable.GRAPH_TYPE_VELOCITY_TIME);
	        panel_tab_2.invalidate();
        }
        catch(Exception e)
        {
        	e.printStackTrace();
        }
        
        try
        {
	        Panel panel_tab_3 = (Panel)findViewById(R.id.panel_acceleration_time);
	        panel_tab_3.setGraphableObjectContainer(VideoActivity.mainProject.getGraphable());
	        panel_tab_3.setGraphType(Graphable.GRAPH_TYPE_ACCELERATION_TIME);
	        panel_tab_3.invalidate();
        }
        catch(Exception e)
        {
        	e.printStackTrace();
        }
        
        TabSpec dataTab = tabHost.newTabSpec("Data");
        dataTab.setContent(R.id.data_tab);
        dataTab.setIndicator("Data");
        
        updateDataTab();
        
        TabSpec spec1 = tabHost.newTabSpec("P/T");
        spec1.setContent(R.id.tab1);
        spec1.setIndicator("P/T");

        TabSpec spec2 = tabHost.newTabSpec("V/T");
        spec2.setIndicator("V/T");
        spec2.setContent(R.id.tab2);

        TabSpec spec3 = tabHost.newTabSpec("A/T");
        spec3.setIndicator("A/T");
        spec3.setContent(R.id.tab3);

        tabHost.addTab(spec1);
        tabHost.addTab(spec2);
        tabHost.addTab(spec3);
        tabHost.addTab(dataTab);
    }

    public boolean onCreateOptionsMenu(Menu menu) 
    {
    	getMenuInflater().inflate(R.menu.activity_graphing, menu);
        return true;
    }
   
    public boolean onOptionsItemSelected(MenuItem item) 
    {
        // Handle item selection
        switch (item.getItemId()) {
            case R.id.action_bar_video:
                swapToVideoActivity();
                return true;
            case R.id.action_bar_save:
            	saveProject();
            	return true;
            case R.id.action_bar_graph:
            	generateGraphs();
            	return true;
            case R.id.data_tab:
            	updateDataTab();
            	return true;
            case R.id.action_bar_preferences:
            	openPreferences();
            	return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
    
    public void saveProject()
    {
    	try
    	{
	    	SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);
	    	boolean saveInternally = prefs.getBoolean("preference_default_save_option", false);
	    	VideoActivity.mainProject.save(this, saveInternally);
    	}
    	catch(Exception e)
    	{
    		e.printStackTrace();
    	}
     }

	 // Returns a valid id that isn't in use
	 public int findId(){  
	     View v = findViewById(id);  
	     while (v != null){  
	         v = findViewById(++id);  
	     }  
	     return id++;  
	 }
    
    public void updateDataTab()
    {
    	//Needs .isChanged boolean for the data object thing to tell if this is needed. Will offer a speed up and reduction in
    	//stupid wastefulness
    	
    	
    	/**
    	 <TextView
				             android:id="@+id/runLabel"
				             android:text="Time"
				             android:layout_height="wrap_content"
				             android:background="@drawable/cell_style"
				             android:gravity="center" />
    	 
    	 */
    	// reference the table layout
    	TableLayout tbl = (TableLayout)findViewById(R.id.table_layout_data);
    	tbl.removeAllViews();
    	
    	try
    	{
	    	GraphableObject positionTime = VideoActivity.mainProject.getGraphable().getPositionTimeGraph();
	    	Point[] points = positionTime.getPoints();
	    	
	    	for(int i = 0; i < positionTime.getPoints().length; i++)
	    	{
	    		// declare a new row
	        	TableRow newRow = new TableRow(this);
	        	
				TextView timeTextView = new TextView(this);
				timeTextView.setId(findId());
				timeTextView.setText(""+points[i].getX());
				timeTextView.setBackgroundResource(R.drawable.cell_style);
				timeTextView.setGravity(Gravity.CENTER);
				
				TextView positionTextView = new TextView(this);
				positionTextView .setId(findId());
				positionTextView.setText(""+points[i].getY());
				positionTextView.setBackgroundResource(R.drawable.cell_style);
				positionTextView.setGravity(Gravity.CENTER);
				
			 	// add views to the row
		    	newRow.addView(timeTextView); // you would actually want to set properties on this before adding it
		    	newRow.addView(positionTextView);
	    
		    	// add the row to the table layout
		    	tbl.addView(newRow);
	    	}
		}
		catch(Exception e)    
		{
			e.printStackTrace();
		}
    }
    
	public int getWidth()
	{
		android.view.Display display = getWindowManager().getDefaultDisplay();
		android.graphics.Point size = new android.graphics.Point();
		display.getSize(size);
		return size.x;
	}
	
	public int getHeight()
	{
		android.view.Display display = getWindowManager().getDefaultDisplay();
		android.graphics.Point size = new android.graphics.Point();
		display.getSize(size);
		return size.y;
	}	
    
    public void generateGraphs()
    {
    	
    }
    
    public void openPreferences()
    {
    	Intent intent = new Intent(this, PreferencesActivity.class);
        intent.putExtra(GRAPHING_ACTIVITY, NAME_ACTIVITY_GRAPHING);
        startActivity(intent);
    }
    
    public void swapToVideoActivity()
    {
    	Intent intent = new Intent(this, VideoActivity.class);
        intent.putExtra(GRAPHING_ACTIVITY, NAME_ACTIVITY_GRAPHING);
        startActivity(intent);
    }
}
