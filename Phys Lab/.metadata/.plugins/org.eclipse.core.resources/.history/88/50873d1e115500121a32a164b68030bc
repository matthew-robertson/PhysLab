package utils.graphing;

public class ClickBoundary 
{
	private final Point[] points; // Points making up the boundary
    
	public ClickBoundary()
	{
		this.points = new Point[4];
	}
	
	public ClickBoundary(Point[] points)
    {
    	this.points = points;
    }

	public boolean contains(Point test) 
    {
    	int i;
    	int j;
    	boolean result = false;
    	for (i = 0, j = points.length - 1; i < points.length; j = i++) 
    	{
    		if ((points[i].y > test.y) != (points[j].y > test.y) &&
    			(test.x < (points[j].x - points[i].x) * (test.y - points[i].y) / (points[j].y-points[i].y) + points[i].x)) {
    			result = !result;
    		}
    	}
    	return result;
    }
    
    public boolean contains(double x, double y) 
    {
    	int i;
    	int j;
    	boolean result = false;
    	for (i = 0, j = points.length - 1; i < points.length; j = i++) 
    	{
    		if ((points[i].y > y) != (points[j].y > y) &&
    			(x < (points[j].x - points[i].x) * (y - points[i].y) / (points[j].y-points[i].y) + points[i].x)) {
    			result = !result;
    		}
    	}
    	return result;
    }
	
}
