package gui.activities;

import utils.preferences.EnumDialogOptions;
import utils.preferences.NoticeDialogFragment;
import utils.preferences.SettingsFragment;
import android.app.Activity;
import android.app.DialogFragment;
import android.content.Intent;
import android.os.Bundle;
import android.preference.CheckBoxPreference;
import android.preference.ListPreference;
import android.preference.Preference;
import android.preference.PreferenceActivity;
import android.view.Menu;
import android.view.MenuItem;

public class PreferencesActivity extends PreferenceActivity 
		implements NoticeDialogFragment.NoticeDialogListener 
{
	private SettingsFragment settingsFragment;
	private String activity;
	private Menu menu;
	
	public PreferencesActivity()
	{
		this.activity = "main_activity";
	}
	
	public PreferencesActivity(String activity)
	{
		this.activity = activity;
	}
	
	public void setActivity(String str)
	{
		this.activity = str;
	}
	
	protected void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		// Display the fragment as the main content.
		
		settingsFragment = new SettingsFragment(this);
		
		Bundle bundle = this.getIntent().getExtras();
		this.activity = bundle.getString(VideoActivity.MAIN_ACTIVITY);
		  
		//THIS is the error
		
		getFragmentManager().beginTransaction().replace(android.R.id.content, settingsFragment).commit();	
				

        // Get a reference to the preferences
        mListPreference = (ListPreference)getPreferenceScreen().findPreference(KEY_LIST_PREFERENCE);

	}
	
	public boolean onOptionsItemSelected(MenuItem item) 
    {
        // Handle item selection
        switch (item.getItemId()) 
        {
            case R.id.action_bar_close_preferences:
            	swapBack();
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
	
	public void swapBack()
    {
    	if(activity.equals(VideoActivity.NAME_ACTIVITY_MAIN))
    	{
    		Intent intent = new Intent(this, VideoActivity.class);
            startActivity(intent);
        }
    	else if(activity.equals(GraphingActivity.NAME_ACTIVITY_GRAPHING))
    	{
    		Intent intent = new Intent(this, GraphingActivity.class);
            startActivity(intent);
        }
    	else if(activity.equals(VideoSelect.NAME_ACTIVITY_VIDEO_SELECT))
    	{
    		Intent intent = new Intent(this, VideoSelect.class);
            startActivity(intent);
        }
    }
	
	public void clearAllData()
	{
		 DialogFragment newFragment = new NoticeDialogFragment();
		    newFragment.show(getFragmentManager(), "missiles");
	}
	
	public boolean onCreateOptionsMenu(Menu menu)
	{
        getMenuInflater().inflate(R.menu.activity_preferences, menu);
        this.menu = menu;
		return true;
	}

	public void onDialogPositiveClick(DialogFragment dialog, String message) 
	{
		if(message.equals(EnumDialogOptions.DIALOG_DELETE_POINTS_CONFIRM.value))
		{
			try
			{
				//Clear all data
				VideoActivity.mainProject.getOptions().clearAllPoints();
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}			
		}
	}

	public void onDialogNegativeClick(DialogFragment dialog, String message) 
	{
		//Do nothing 
	}
	
	public static final String KEY_LIST_PREFERENCE = "listPref";

    private ListPreference mListPreference;


    @Override
    protected void onResume() {
        super.onResume();

        // Setup the initial values
        mListPreference.setSummary("Current value is " + mListPreference.getEntry().toString());

        // Set up a listener whenever a key changes            
        getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);
    }

    @Override
    protected void onPause() {
        super.onPause();

        // Unregister the listener whenever a key changes            
        getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this);    
    }

    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
        // Set new summary, when a preference value changes
        if (key.equals(KEY_LIST_PREFERENCE)) {
            mListPreference.setSummary("Current value is " + mListPreference.getEntry().toString()); 
        }
    }
}
