package gui.activities;

import java.util.Random;

import project.Project;
import utils.action.Action;
import utils.action.ActionDelete;
import utils.action.EnumAction;
import utils.graphing.Point;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.Menu;
import android.view.MenuItem;

public class VideoActivity extends Activity 
{
	public final static String MAIN_ACTIVITY = "gui.activities.PREFERENCE_MESSAGE";
	public final static String NAME_ACTIVITY_MAIN = "main_activity";
	public static Project mainProject;
	private boolean plottingPoints;
	private Menu menu;
	
    public void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_video);
        PreferenceManager.setDefaultValues(this, R.xml.preferences_menu, false);
        mainProject = new Project();
        plottingPoints = false;
    }

    public boolean onCreateOptionsMenu(Menu menu) 
    {
        getMenuInflater().inflate(R.menu.activity_video, menu);
        this.menu = menu;
        return true;
    }
    
    public boolean onOptionsItemSelected(MenuItem item) 
    {
        // Handle item selection
        switch (item.getItemId()) 
        {
            case R.id.preferences_item:
            	openPreferences();
                return true;
            case R.id.action_bar_graph:
            	openGraphs();
            	return true;
            case R.id.action_bar_undo:
            	reverseLastAction();
            	return true;
            case R.id.action_bar_set_origin:
            	setOrigin();            	
            	return true;
            case R.id.action_bar_plot_points:
            	plotPoints();
            	return true;
            case R.id.action_bar_set_scale:
            	setScale();            	
            	return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
    
    public void setOrigin()
    {
    	if(mainProject.getOptions().getPointCount() > 0)
    	{
    		Point point = mainProject.getOptions().removeLastPoint();
    		
    		Action action = new ActionDelete().setAssociatedObject(point);

    		mainProject.getActionQueue().enqueue();
    		
    		System.out.println("Removing Last Point (hopefully)");
    	}
    }
    
    public void plotPoints()
    {
    	plottingPoints = !plottingPoints;
    	if(plottingPoints)
    	{
    		MenuItem item = menu.findItem(R.id.action_bar_plot_points);
    		item.setTitle(getString(R.string.action_bar_plot_points_start));
    	}
    	else
    	{
    		MenuItem item = menu.findItem(R.id.action_bar_plot_points);
    		item.setTitle(getString(R.string.action_bar_plot_points_stop));
    	}    	
    }
    
    public void setScale()
    {
    	Random random = new Random();
    	mainProject.getOptions().registerPoint(new Point(random.nextInt(100), random.nextInt(100)));
    	System.out.println("Adding new point (hopefully)");
    }
    
    public void reverseLastAction()
    {
    	//Check to make sure there's actually a queue event
    	if(mainProject.getActionQueue().size() > 0)
    	{
    		Action action = mainProject.getActionQueue().poll();
    		String description = action.getDescription();
    		//Last action was adding a point... so remove it
    		if(description.equals(EnumAction.ACTION_ADD_POINT.actionValue))
    		{
    			setOrigin();
    		}
    		if(description.equals(EnumAction.ACTION_DELETE_POINT.actionValue))
    		{
    			mainProject.getOptions().registerPoint((Point)(action.getAssociatedObject()));
    		}
    	}
    }
    
    public int getWidth()
	{
		android.view.Display display = getWindowManager().getDefaultDisplay();
		android.graphics.Point size = new android.graphics.Point();
		display.getSize(size);
		return size.x;
	}
	
	public int getHeight()
	{
		android.view.Display display = getWindowManager().getDefaultDisplay();
		android.graphics.Point size = new android.graphics.Point();
		display.getSize(size);
		return size.y;
	}
    
    public void openPreferences()
    {
    	Intent intent = new Intent(this, PreferencesActivity.class);
        intent.putExtra(MAIN_ACTIVITY, NAME_ACTIVITY_MAIN);
        startActivity(intent);
    }

    public void openGraphs(/*View view*/)
    {
    	Intent intent = new Intent(this, GraphingActivity.class);
        intent.putExtra(MAIN_ACTIVITY, "Unneeded_Method");
        startActivity(intent);
    }
}
