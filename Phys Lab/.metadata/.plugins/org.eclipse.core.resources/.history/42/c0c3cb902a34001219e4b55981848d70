package utils.drawing;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.view.SurfaceHolder;
import android.view.SurfaceView;

public class Panel extends SurfaceView implements SurfaceHolder.Callback
{
    private DrawingThread _thread;
 
    public Panel(Context context) 
    {
        super(context);
        getHolder().addCallback(this);
        _thread = new TutorialThread(getHolder(), this);
    }

	public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) 
	{
	}

	public void surfaceCreated(SurfaceHolder holder) 
	{
	    _thread.setRunning(true);
	    _thread.start();
	}
	 
	public void surfaceDestroyed(SurfaceHolder holder) 
	{
	    // simply copied from sample application LunarLander:
	    // we have to tell thread to shut down & wait for it to finish, or else
	    // it might touch the Surface after we return and explode
	    boolean retry = true;
	    _thread.setRunning(false);
	    while (retry) 
	    {
	        try 
	        {
	            _thread.join();
	            retry = false;
	        } catch (InterruptedException e) 
	        {
	            // we will try it again and again...
	        }
	    }
	}
	
	public void onDraw(Canvas canvas) 
	{
        //Bitmap _scratch = BitmapFactory.decodeResource(getResources(), R.drawable.icon);
        canvas.drawColor(Color.BLUE);
        Paint paint = new Paint();
        
        canvas.drawLine(10, 10, 100, 100, paint);
        //canvas.drawBitmap(_scratch, 10, 10, null);
    }
}